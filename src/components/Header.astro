---
import "../styles/global.css"
---
<header>
    <ion-icon name="moon-outline"></ion-icon>
    <ion-icon  class="hidden" name="sunny-outline"></ion-icon>
    <aside>
        <a href="/" class="roboto-light">Home</a>
        <a href="/projects" class="roboto-light">Projects</a>
        <a href="https://github.com/oiamo123"><ion-icon name="logo-github"></ion-icon></a>
        <a href="https://www.linkedin.com/in/gavin-oiamo/?originalSubdomain=ca"><ion-icon name="logo-linkedin"></ion-icon></a>
    </aside>
    <div class="hamburger">
        <span></span>
        <span></span>
        <span></span>
    </div>
</header>
<nav class="hidden">
    <a class="roboto-regular" href="/">Home</a>
    <a class="roboto-regular" href="/projects">Projects</a>
    <div class="links">
        <a href="https://github.com/oiamo123"><ion-icon name="logo-github"></ion-icon></a>
        <a href="https://www.linkedin.com/in/gavin-oiamo/?originalSubdomain=ca"><ion-icon name="logo-linkedin"></ion-icon></a>
    </div>
</nav>
<style>
    header {
        display: flex;
        align-items: center;
        padding: var(--s-6) var(--s-6);
        background-color: var(--header-color);
        justify-content: space-between;
        box-shadow: 0px 6px 5px rgba(0, 0, 0, 0.05);
        position: fixed;
        width: 100%;
        top: 0%;
        z-index: 10;
        transition: top 0.4s ease-in-out;
    }

    ion-icon {
        scale: 1.75;
        z-index: 10;
        position: relative;
    }

    ion-icon[name="sunny-outline"] {
        color: yellow;
    }

    ion-icon[name="moon-outline"] {
        color: black;
    }

    ion-icon:hover {
        cursor: pointer;
    }

    header aside {
        display: none;
    }

    header .links {
        display: none;
    }

    .hamburger {
        display: flex;
        flex-direction: column;
        gap: 6px;
        cursor: pointer;
        position: relative;
        z-index: 11;
    }

    .hamburger span {
        display: block;
        height: 3px;
        width: 32px;
        border-radius: 9999px;
        background-color: var(--font-color);
        opacity: 1;
        transition: transform 0.2s ease, opacity 0.1s ease;
    }

    .hamburger span:nth-child(2) {
        width: 16px;
        align-self: flex-end;
    }

    .hamburger.active span:nth-child(2) {
        opacity: 0;
    }

    .hamburger.active span:nth-child(1) {
        transform: rotate(45deg) translate(6px, 6px);
    }

    .hamburger.active span:nth-child(3) {
        transform: rotate(-45deg) translate(6px, -7px);
    }

    .hamburger span:nth-child(1) {
        transform: rotate(0deg) translate(0, 0);
    }

    .hamburger span:nth-child(2) {
        opacity: 1;
    }

    .hamburger span:nth-child(3) {
        transform: rotate(0deg) translate(0, 0);
    }

    .hamburger:hover {
        cursor: pointer;
    }

    nav {
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        position: fixed;
        top: 100vh;
        height: 100vh;
        width: 100vw;
        padding: var(--s-13) var(--s-8);
        gap: var(--s-6);
        background-color: var(--secondary-color);
        z-index: 2;
        transition: top 0.2s ease-in;
    }

    nav a {
        font-size: var(--s-5);
        color: var(--font-color);
        cursor: pointer;
        letter-spacing: 2px;
    }

    nav .links {
        display: flex;
        gap: var(--s-6);
        margin-left: var(--s-1);
    }

    nav.active {
        top: 0;
    }

    @media (min-width: 768px) {
        header {
            padding: var(--s-6) var(--s-7);
        }

        ion-icon {
            scale: 2;
        }

        nav {
            gap: var(--s-6);
            padding: var(--s-15) var(--s-11);
        }

        nav a {
            font-size: var(--s-5);
        }

        nav .links {
            gap: var(--s-7);
        }
    }

    @media (min-width: 1024px) {
        header aside {
            display: flex;
            width: min-content;
            justify-content: space-between;
            font-size: var(--s-4);
            gap: var(--s-6);
        }

        header aside a:nth-child(-n + 2) {
            position: relative;
            overflow: hidden;
        }

        header aside a:nth-child(-n + 2)::after {
            content: '';
            display: block;
            position: absolute;
            height: 2px;
            width: 100%;
            background-color: var(--font-color);
            right: 100%;
            bottom: 0%;
            transition: right 0.3s ease-in-out;
        }

        header aside a:nth-child(-n + 2):hover::after {
            right: 0%;
        }

        .hamburger {
            display: none;
        }

        header {
            padding: var(--s-6) var(--s-10);
        }
    }

    @media (min-width: 1360px) {
        header {
            padding: var(--s-6) var(--s-15);
        }
    }
</style>
<script type="module">
    const moon = document.querySelector('[name="moon-outline"]');
    const sun = document.querySelector('[name="sunny-outline"]');
    const hamburger = document.querySelector('.hamburger')
    const nav = document.querySelector('nav');

    
  const changeMostUsedTheme = function () {
    const img = document.querySelector(".mostUsed")
    const theme = localStorage.getItem("theme")

    if (window.location.href === `${window.location.origin}/`) {
        if (theme === "dark") {
            img.src = `https://github-readme-stats.vercel.app/api/top-langs/?username=oiamo123&size_weight=0.6&count_weight=0.4&exclude_repo=odin-recipes,curriculum,javascript-exercises,Javascript30,css-exercises&show=Portfolio&hide_border=true&bg_color=0e0f12&title_color=e1e1e1&text_color=e1e1e1&layout=donut-vertical`
        } else {
            img.src = `https://github-readme-stats.vercel.app/api/top-langs/?username=oiamo123&size_weight=0.6&count_weight=0.4&exclude_repo=odin-recipes,curriculum,javascript-exercises,Javascript30,css-exercises&show=Portfolio&hide_border=true&bg_color=ffffff&title_color=000000&text_color=000000&layout=donut-vertical`
        }
    }
  }

    const toggleThemeIcons = function() {
        moon.classList.contains('hidden') ? moon.classList.remove('hidden') : moon.classList.add('hidden')
        sun.classList.contains('hidden') ? sun.classList.remove('hidden') : sun.classList.add('hidden')
    }

    // get user preference for dark mode
    const darkMode = window.matchMedia('(prefers-color-scheme: dark)')

    // set user preference
    darkMode.matches && document.documentElement.getAttribute("data-theme") == null ? 
                    document.documentElement.setAttribute("data-theme", "dark"): 
                    document.documentElement.setAttribute("data-theme", "light")

    //check localstorage for theme and set theme
    document.addEventListener("DOMContentLoaded", () => {
        const theme = localStorage.getItem('theme');
        if (theme) document.documentElement.setAttribute('data-theme', theme);
        changeMostUsedTheme();
        // set icon for theme
        if (theme == "light" && moon.classList.contains("hidden")) toggleThemeIcons();
        if (theme == "dark" && sun.classList.contains("hidden")) toggleThemeIcons();
    })
    

    const switchTheme = function () {
        // toggle button
        toggleThemeIcons();

        // toggle theme
        const theme = document.documentElement.getAttribute("data-theme")
        theme == "dark" ? document.documentElement.setAttribute("data-theme", "light") : document.documentElement.setAttribute("data-theme", "dark")
        // store theme in local storage
        localStorage.setItem("theme", theme == "dark" ? "light": "dark")
        changeMostUsedTheme();
    }

    // change hamburger and nav state
    hamburger.addEventListener(`click`, (e) => {
        hamburger.classList.toggle('active');
        nav.classList.toggle('active')
    })

    moon.addEventListener(`click`, switchTheme)
    sun.addEventListener(`click`, switchTheme)    
</script>