---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import Timeline from '../components/Timeline.astro';

const imagesresponse = await fetch('http://localhost:3000/api/images');
const images = await imagesresponse.json();

const profileIMG = images.find(img => img.for === "profile")

const titles = ["Backend", "Frontend", "Java", "C#"];
---
<Layout title="Home - Gavin">
    <article>
        {titles.map((title) => (
          <h1 class="hero glitch layers">
            <span class="title roboto-bold-italic">{title}</span>
          </h1>
        ))} 
        <h1 class="roboto-bold">Developer.</h1>
        <p class="roboto-light">My name is <span class="roboto-medium-italic">Gavin</span> and I'm a junior developer versed in everything frontend and backend.</p>
    </article>
    <article>
      <p></p>
      <div>
        <img src={profileIMG.href} alt={profileIMG.alt}>
      </div>
    </article>
    <Timeline></Timeline>
    <article>
      <h1>My Skills</h1>

    </article>
    <article>
      <h1 class="roboto-bold">Feel free to contact me!</h1>
      <p class="roboto-light">I am always open to new opportunities, questions or proposals</p>
      <form>
        <p class="roboto-light">Your name</p>
        <label for="name"></label>
        <input type="text" name="name" placeholder="Enter your name">
        <p class="roboto-light">Email address</p>
        <label for="email"></label>
        <input type="email" name="email" placeholder="Enter your email address">
        <p class="roboto-light">Your message</p>
        <label for="message"></label>
        <textarea name="message" placeholder="Hey, i've got an idea for an application and was thinking you could help me out. When would you be free?"></textarea>
        <button class="btn" type="submit"><p>Submit</p><svg width="48" height="24" viewBox="0 0 48 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M4 12H44M44 12L34 8M44 12L34 16" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
        </svg></button>
        </form>
      </article>
      <p class="message-response"></p>
</Layout>

<style>
article:nth-child(1) h1 {
  font-size: var(--s-5);
}

article:nth-child(1) > p {
  margin-top: var(--s-6);
  font-size: var(--s-4);
  letter-spacing: 1.4px;
  line-height: var(--s-6);
}

.title {
  display: none;
  color: var()
}

.active {
  display: inline-block;
}

article:nth-child(2) {
  background-color: var(--secondary-color);
  width: 100vw;
}

article:nth-child(2) img {
  position: relative;
  z-index: 1;
  margin: var(--s-8) 0;
}

article:nth-child(2) div {
  height: fit-content;
  width: fit-content;
  position: relative;
}

article:nth-child(2) div::before {
  content: '';
  display: block;
  height: 100%;
  width: 100%;
  border: 1px white solid;
  position: absolute;
  transform: translate(var(--s-4), var(--s-4));
}

.link {
  cursor: pointer;
  overflow: hidden;
  color: var(--accent-color);
}

article:nth-child(4) h1 {
  font-size: var(--s-6);
  width: var(--s-75);
}

article:nth-child(4) > p {
  font-size: var(--s-4);
  letter-spacing: 2px;
}

article:nth-child(4) {
  display: flex;
  flex-direction: column;
  gap: var(--s-5);
}

form {
  margin: var(--s-1) 0px;
}

form > p {
  font-size: var(--s-2);
  letter-spacing: 1px;
  margin-top: var(--s-5);
}

form input:focus, textarea:focus {
  border-bottom: 1.5px solid var(--secondary-color);
  transition: border-bottom 0.2s ease-in;
}

textarea {
  resize: none;
  height: var(--s-11);
}

input, textarea {
  width: var(--s-100);
  background-color: var(--primary-color);
  padding: var(--s-1) 0px;
  border-bottom: 1px solid var(--accent-color);
  padding-bottom: var(--s-1);
  font-size: var(--s-2);
}

input:focus, textarea:focus {
  outline: none;
}

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  font-family: "Roboto", sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
  font-size: var(--s-2);
}

input:-ms-input-placeholder, textarea::-ms-input-placeholder {
  font-family: "Roboto", sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
  font-size: var(--s-2);
}

input:-moz-placeholder, textarea::-moz-placeholder {
  font-family: "Roboto", sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
}

.btn {
  margin-top: var(--s-6);
}
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const titles = document.querySelectorAll('.title');
  
    if (titles.length > 0) {
      // Set the first title as active
      titles[0].classList.add('active');
  
      let curTitle = 0;
      setInterval(() => {
        titles[curTitle].classList.remove('active');
  
        curTitle++;
        if (curTitle === titles.length) curTitle = 0;
  
        titles[curTitle].classList.add('active');
      }, 4000);
    }
  });

  document.querySelector('button[type="submit"]').addEventListener(`click`, (e) => {
    e.preventDefault()

    const nameInput = document.querySelector('input[name="name"]') as HTMLInputElement;
    const emailInput = document.querySelector('input[name="email"]') as HTMLInputElement;
    const messageInput = document.querySelector('textarea[name="message"]') as HTMLInputElement;

    const name = nameInput.value;
    const email = emailInput.value;
    const message = messageInput.value;


    fetch("http://localhost:3000/api/mail", 
      { method: 'POST', 
        headers: { 'Content-Type': 'application/json' }, 
        body: JSON.stringify({ name, email, message })}).then(res => res.json()).then(data => {

      nameInput.style.borderBottomColor = `#8cb0bf`;
      emailInput.style.borderBottomColor = `#8cb0bf`; 
      messageInput.style.borderBottomColor = `#8cb0bf`; 
      
      if (!data.message) {
          data.forEach(err => {
            const elements = document.getElementsByName(`${err.path}`)

            elements.forEach(e => {
              e.textContent = '';
              e.setAttribute("placeholder", err.message);
              e.style.borderBottomColor = `#FF0000`;
            })
          })
      } else {
        document.querySelector(`.message-response`).textContent = `${data.message}`
      }
    })
  })
  </script>