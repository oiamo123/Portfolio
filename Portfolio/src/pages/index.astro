---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

const titles = ["Backend", "Frontend", "Java", "C#"];
---
<Layout title="Home - Gavin">
    <article>
        {titles.map((title) => (
          <h1 class="hero glitch layers">
            <span class="title roboto-bold-italic">{title}</span>
          </h1>
        ))} 
        <h1 class="roboto-bold">Developer.</h1>
        <p class="roboto-light">My name is <span class="roboto-medium-italic">Gavin</span> and I'm a junior developer versed in everything frontend and backend.</p>
    </article>
    <article>
      <h1 class="roboto-bold">Feel free to contact me!</h1>
      <p class="roboto-light">I am always open to new opportunities, questions or proposals</p>
      <form action="">
        <p class="roboto-light">Your name</p>
        <label for="name"></label>
        <input type="text" name="name" placeholder="Enter your name">
        <p class="roboto-light">Email address</p>
        <label for="email"></label>
        <input type="email" name="email" placeholder="Enter your email address">
        <p class="roboto-light">Your message</p>
        <label for="message"></label>
        <textarea name="message" placeholder="Hey, i've got an idea for an application and was thinking you could help me out. When would you be free?"></textarea>
        <button class="btn" type="submit"><p>Submit</p><svg width="48" height="24" viewBox="0 0 48 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M4 12H44M44 12L34 8M44 12L34 16" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round"/>
        </svg></button>
        </form>
      </article>
</Layout>

<style>
article:nth-child(1) h1 {
  font-size: var(--s-5);
}

article:nth-child(1) > p {
  margin-top: var(--s-5);
  font-size: var(--s-3);
  letter-spacing: 1.4px;
  line-height: var(--s-5);
}

.title {
  display: none;
}

.active {
  display: inline-block;
}

textarea {
  resize: none;
  height: var(--s-10);
}

input, textarea {
  width: var(--s-100);
  background-color: var(--primary-color);
  padding: var(--s-1) 0px;
  border-bottom: 1px solid var(--accent-color);
  padding-bottom: var(--s-1);
  font-size: var(--s-2);
}

input:focus, textarea:focus {
  outline: none;
}

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
  font-family: "Roboto", sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
  font-size: var(--s-2);
}

input:-ms-input-placeholder, textarea::-ms-input-placeholder {
  font-family: "Roboto", sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
  font-size: var(--s-2);
}

input:-moz-placeholder, textarea::-moz-placeholder {
  font-family: "Roboto", sans-serif;
  font-weight: 200;
  letter-spacing: 1px;
}

article:nth-child(2) h1 {
  font-size: var(--s-5);
  width: var(--s-75);
}

article:nth-child(2) > p {
  font-size: var(--s-3);
  letter-spacing: 2px;
}

article:nth-child(2) {
  display: flex;
  flex-direction: column;
  gap: var(--s-4);
}

form {
  margin: var(--s-1) 0px;
}

form > p {
  font-size: var(--s-2);
  letter-spacing: 1px;
  margin-top: var(--s-4);
}

form input:focus, textarea:focus {
  border-bottom: 1.5px solid var(--secondary-color);
  transition: border-bottom 0.2s ease-in;
}

.btn {
  margin-top: var(--s-5);
}
</style>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    const titles = document.querySelectorAll('.title');
  
    if (titles.length > 0) {
      // Set the first title as active
      titles[0].classList.add('active');
  
      let curTitle = 0;
      setInterval(() => {
        titles[curTitle].classList.remove('active');
  
        curTitle++;
        if (curTitle === titles.length) curTitle = 0;
  
        titles[curTitle].classList.add('active');
      }, 4000);
    }
  });
  </script>